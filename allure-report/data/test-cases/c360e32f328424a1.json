{"uid":"c360e32f328424a1","name":"test_Signup_002","fullName":"testCases.test_UserProfile.Test_UserProfile#test_Signup_002","historyId":"ef84edf7b7d226e78bc76412778cd6b4","time":{"start":1723281253647,"stop":1723281255967,"duration":2320},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\">...</button> is not clickable at point (503, 612). Other element would receive the click: <footer>...</footer>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00007FF762339632+30946]\n\t(No symbol) [0x00007FF7622EE3C9]\n\t(No symbol) [0x00007FF7621E6FDA]\n\t(No symbol) [0x00007FF76223FEEE]\n\t(No symbol) [0x00007FF76223D962]\n\t(No symbol) [0x00007FF76223AE7B]\n\t(No symbol) [0x00007FF76223A095]\n\t(No symbol) [0x00007FF76222C271]\n\t(No symbol) [0x00007FF76225CA6A]\n\t(No symbol) [0x00007FF76222BBB6]\n\t(No symbol) [0x00007FF76225CC80]\n\t(No symbol) [0x00007FF76227B041]\n\t(No symbol) [0x00007FF76225C813]\n\t(No symbol) [0x00007FF76222A6E5]\n\t(No symbol) [0x00007FF76222B021]\n\tGetHandleVerifier [0x00007FF76246F83D+1301229]\n\tGetHandleVerifier [0x00007FF76247BDB7+1351783]\n\tGetHandleVerifier [0x00007FF762472A03+1313971]\n\tGetHandleVerifier [0x00007FF76236DD06+245686]\n\t(No symbol) [0x00007FF7622F758F]\n\t(No symbol) [0x00007FF7622F3804]\n\t(No symbol) [0x00007FF7622F3992]\n\t(No symbol) [0x00007FF7622EA3EF]\n\tBaseThreadInitThunk [0x00007FF9C856257D+29]\n\tRtlUserThreadStart [0x00007FF9C99EAF28+40]","statusTrace":"self = <testCases.test_UserProfile.Test_UserProfile object at 0x00000287A66A0890>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ac86ed7da96f99e68eac9c3a1432a331\")>\n\n    def test_Signup_002(self, setup):\n        self.Log.info(\"testcase test_Signup_002 is started\")\n        self.driver = setup\n        self.Log.info(\"opening browser\")\n        self.su = SignUp_Class(self.driver)\n        self.su.Click_Signup()\n        self.Log.info(\"Entering the username\")\n        self.Log.info(generate_random_username())\n        self.su.Enter_Username(generate_random_username())\n        self.Log.info(\"Entering the password\")\n        self.su.Enter_Password(\"Mahesh@123\")\n        self.Log.info(\"Entering the email\")\n        self.Log.info(generate_random_email())\n        self.su.Enter_Email(generate_random_email())\n        self.Log.info(\"Entering the phone\")\n        self.Log.info(generate_random_phone_number())\n        self.su.Enter_Phone(generate_random_phone_number())\n        self.Log.info(\"click on create user button\")\n>       self.su.Click_CreateUser_Button()\n\ntestCases\\test_UserProfile.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\SignUp_Page.py:32: in Click_CreateUser_Button\n    self.driver.find_element(By.XPATH, self.click_create_user_button_XPath).click()\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000287A56474A0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7622EA3EF]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9C856257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF9C99EAF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\">...</button> is not clickable at point (503, 612). Other element would receive the click: <footer>...</footer>\nE         (Session info: chrome=127.0.6533.100)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF762339632+30946]\nE       \t(No symbol) [0x00007FF7622EE3C9]\nE       \t(No symbol) [0x00007FF7621E6FDA]\nE       \t(No symbol) [0x00007FF76223FEEE]\nE       \t(No symbol) [0x00007FF76223D962]\nE       \t(No symbol) [0x00007FF76223AE7B]\nE       \t(No symbol) [0x00007FF76223A095]\nE       \t(No symbol) [0x00007FF76222C271]\nE       \t(No symbol) [0x00007FF76225CA6A]\nE       \t(No symbol) [0x00007FF76222BBB6]\nE       \t(No symbol) [0x00007FF76225CC80]\nE       \t(No symbol) [0x00007FF76227B041]\nE       \t(No symbol) [0x00007FF76225C813]\nE       \t(No symbol) [0x00007FF76222A6E5]\nE       \t(No symbol) [0x00007FF76222B021]\nE       \tGetHandleVerifier [0x00007FF76246F83D+1301229]\nE       \tGetHandleVerifier [0x00007FF76247BDB7+1351783]\nE       \tGetHandleVerifier [0x00007FF762472A03+1313971]\nE       \tGetHandleVerifier [0x00007FF76236DD06+245686]\nE       \t(No symbol) [0x00007FF7622F758F]\nE       \t(No symbol) [0x00007FF7622F3804]\nE       \t(No symbol) [0x00007FF7622F3992]\nE       \t(No symbol) [0x00007FF7622EA3EF]\nE       \tBaseThreadInitThunk [0x00007FF9C856257D+29]\nE       \tRtlUserThreadStart [0x00007FF9C99EAF28+40]\n\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"setup","time":{"start":1723281245562,"stop":1723281253647,"duration":8085},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\">...</button> is not clickable at point (503, 612). Other element would receive the click: <footer>...</footer>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00007FF762339632+30946]\n\t(No symbol) [0x00007FF7622EE3C9]\n\t(No symbol) [0x00007FF7621E6FDA]\n\t(No symbol) [0x00007FF76223FEEE]\n\t(No symbol) [0x00007FF76223D962]\n\t(No symbol) [0x00007FF76223AE7B]\n\t(No symbol) [0x00007FF76223A095]\n\t(No symbol) [0x00007FF76222C271]\n\t(No symbol) [0x00007FF76225CA6A]\n\t(No symbol) [0x00007FF76222BBB6]\n\t(No symbol) [0x00007FF76225CC80]\n\t(No symbol) [0x00007FF76227B041]\n\t(No symbol) [0x00007FF76225C813]\n\t(No symbol) [0x00007FF76222A6E5]\n\t(No symbol) [0x00007FF76222B021]\n\tGetHandleVerifier [0x00007FF76246F83D+1301229]\n\tGetHandleVerifier [0x00007FF76247BDB7+1351783]\n\tGetHandleVerifier [0x00007FF762472A03+1313971]\n\tGetHandleVerifier [0x00007FF76236DD06+245686]\n\t(No symbol) [0x00007FF7622F758F]\n\t(No symbol) [0x00007FF7622F3804]\n\t(No symbol) [0x00007FF7622F3992]\n\t(No symbol) [0x00007FF7622EA3EF]\n\tBaseThreadInitThunk [0x00007FF9C856257D+29]\n\tRtlUserThreadStart [0x00007FF9C99EAF28+40]","statusTrace":"self = <testCases.test_UserProfile.Test_UserProfile object at 0x00000287A66A0890>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ac86ed7da96f99e68eac9c3a1432a331\")>\n\n    def test_Signup_002(self, setup):\n        self.Log.info(\"testcase test_Signup_002 is started\")\n        self.driver = setup\n        self.Log.info(\"opening browser\")\n        self.su = SignUp_Class(self.driver)\n        self.su.Click_Signup()\n        self.Log.info(\"Entering the username\")\n        self.Log.info(generate_random_username())\n        self.su.Enter_Username(generate_random_username())\n        self.Log.info(\"Entering the password\")\n        self.su.Enter_Password(\"Mahesh@123\")\n        self.Log.info(\"Entering the email\")\n        self.Log.info(generate_random_email())\n        self.su.Enter_Email(generate_random_email())\n        self.Log.info(\"Entering the phone\")\n        self.Log.info(generate_random_phone_number())\n        self.su.Enter_Phone(generate_random_phone_number())\n        self.Log.info(\"click on create user button\")\n>       self.su.Click_CreateUser_Button()\n\ntestCases\\test_UserProfile.py:56: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObjects\\SignUp_Page.py:32: in Click_CreateUser_Button\n    self.driver.find_element(By.XPATH, self.click_create_user_button_XPath).click()\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:354: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000287A56474A0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7622EA3EF]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9C856257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF9C99EAF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\">...</button> is not clickable at point (503, 612). Other element would receive the click: <footer>...</footer>\nE         (Session info: chrome=127.0.6533.100)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF762339632+30946]\nE       \t(No symbol) [0x00007FF7622EE3C9]\nE       \t(No symbol) [0x00007FF7621E6FDA]\nE       \t(No symbol) [0x00007FF76223FEEE]\nE       \t(No symbol) [0x00007FF76223D962]\nE       \t(No symbol) [0x00007FF76223AE7B]\nE       \t(No symbol) [0x00007FF76223A095]\nE       \t(No symbol) [0x00007FF76222C271]\nE       \t(No symbol) [0x00007FF76225CA6A]\nE       \t(No symbol) [0x00007FF76222BBB6]\nE       \t(No symbol) [0x00007FF76225CC80]\nE       \t(No symbol) [0x00007FF76227B041]\nE       \t(No symbol) [0x00007FF76225C813]\nE       \t(No symbol) [0x00007FF76222A6E5]\nE       \t(No symbol) [0x00007FF76222B021]\nE       \tGetHandleVerifier [0x00007FF76246F83D+1301229]\nE       \tGetHandleVerifier [0x00007FF76247BDB7+1351783]\nE       \tGetHandleVerifier [0x00007FF762472A03+1313971]\nE       \tGetHandleVerifier [0x00007FF76236DD06+245686]\nE       \t(No symbol) [0x00007FF7622F758F]\nE       \t(No symbol) [0x00007FF7622F3804]\nE       \t(No symbol) [0x00007FF7622F3992]\nE       \t(No symbol) [0x00007FF7622EA3EF]\nE       \tBaseThreadInitThunk [0x00007FF9C856257D+29]\nE       \tRtlUserThreadStart [0x00007FF9C99EAF28+40]\n\nC:\\Users\\hp\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","steps":[],"attachments":[{"uid":"2a863e3d67877bfb","name":"log","source":"2a863e3d67877bfb.txt","type":"text/plain","size":784}],"parameters":[],"hasContent":true,"attachmentsCount":1,"shouldDisplayMessage":true,"attachmentStep":false,"stepsCount":0},"afterStages":[{"name":"setup::0","time":{"start":1723281256091,"stop":1723281258325,"duration":2234},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"attachmentsCount":0,"shouldDisplayMessage":false,"attachmentStep":false,"stepsCount":0}],"labels":[{"name":"parentSuite","value":"testCases"},{"name":"suite","value":"test_UserProfile"},{"name":"subSuite","value":"Test_UserProfile"},{"name":"host","value":"DESKTOP-LPMABD9"},{"name":"thread","value":"10484-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testCases.test_UserProfile"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"5421a450d68939ee","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\">...</button> is not clickable at point (503, 612). Other element would receive the click: <footer>...</footer>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00007FF762339632+30946]\n\t(No symbol) [0x00007FF7622EE3C9]\n\t(No symbol) [0x00007FF7621E6FDA]\n\t(No symbol) [0x00007FF76223FEEE]\n\t(No symbol) [0x00007FF76223D962]\n\t(No symbol) [0x00007FF76223AE7B]\n\t(No symbol) [0x00007FF76223A095]\n\t(No symbol) [0x00007FF76222C271]\n\t(No symbol) [0x00007FF76225CA6A]\n\t(No symbol) [0x00007FF76222BBB6]\n\t(No symbol) [0x00007FF76225CC80]\n\t(No symbol) [0x00007FF76227B041]\n\t(No symbol) [0x00007FF76225C813]\n\t(No symbol) [0x00007FF76222A6E5]\n\t(No symbol) [0x00007FF76222B021]\n\tGetHandleVerifier [0x00007FF76246F83D+1301229]\n\tGetHandleVerifier [0x00007FF76247BDB7+1351783]\n\tGetHandleVerifier [0x00007FF762472A03+1313971]\n\tGetHandleVerifier [0x00007FF76236DD06+245686]\n\t(No symbol) [0x00007FF7622F758F]\n\t(No symbol) [0x00007FF7622F3804]\n\t(No symbol) [0x00007FF7622F3992]\n\t(No symbol) [0x00007FF7622EA3EF]\n\tBaseThreadInitThunk [0x00007FF9C856257D+29]\n\tRtlUserThreadStart [0x00007FF9C99EAF28+40]","time":{"start":1723281020758,"stop":1723281023691,"duration":2933}}],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":0,"broken":2,"skipped":0,"passed":0,"unknown":0,"total":2},"items":[{"uid":"ceed696a0641a3f5","reportUrl":"http://localhost:9090/job/BankApp_pytest1/1/allure/#testresult/ceed696a0641a3f5","status":"broken","statusDetails":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button type=\"submit\">...</button> is not clickable at point (503, 612). Other element would receive the click: <footer>...</footer>\n  (Session info: chrome=127.0.6533.100)\nStacktrace:\n\tGetHandleVerifier [0x00007FF762339632+30946]\n\t(No symbol) [0x00007FF7622EE3C9]\n\t(No symbol) [0x00007FF7621E6FDA]\n\t(No symbol) [0x00007FF76223FEEE]\n\t(No symbol) [0x00007FF76223D962]\n\t(No symbol) [0x00007FF76223AE7B]\n\t(No symbol) [0x00007FF76223A095]\n\t(No symbol) [0x00007FF76222C271]\n\t(No symbol) [0x00007FF76225CA6A]\n\t(No symbol) [0x00007FF76222BBB6]\n\t(No symbol) [0x00007FF76225CC80]\n\t(No symbol) [0x00007FF76227B041]\n\t(No symbol) [0x00007FF76225C813]\n\t(No symbol) [0x00007FF76222A6E5]\n\t(No symbol) [0x00007FF76222B021]\n\tGetHandleVerifier [0x00007FF76246F83D+1301229]\n\tGetHandleVerifier [0x00007FF76247BDB7+1351783]\n\tGetHandleVerifier [0x00007FF762472A03+1313971]\n\tGetHandleVerifier [0x00007FF76236DD06+245686]\n\t(No symbol) [0x00007FF7622F758F]\n\t(No symbol) [0x00007FF7622F3804]\n\t(No symbol) [0x00007FF7622F3992]\n\t(No symbol) [0x00007FF7622EA3EF]\n\tBaseThreadInitThunk [0x00007FF9C856257D+29]\n\tRtlUserThreadStart [0x00007FF9C99EAF28+40]","time":{"start":1723281020758,"stop":1723281023691,"duration":2933}}]},"tags":[]},"source":"c360e32f328424a1.json","parameterValues":[]}